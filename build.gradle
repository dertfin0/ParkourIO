plugins {
    id 'java'
    id 'com.gradleup.shadow' version '9.0.0-beta4'
}

group = 'ru.dfhub.parkourio'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "GitHub"
        url = "https://maven.pkg.github.com/dertfin0/dfpaperlib"
        credentials {
            username = System.getenv("GITHUB_ACTOR")
            password = System.getenv("GITHUB_TOKEN")
        }
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.21-R0.1-SNAPSHOT"
    implementation 'org.json:json:20240303'
    implementation 'org.incendo:cloud-paper:2.0.0-beta.10'
    implementation 'ru.dfhub:dfpaperlib:1.2'

    implementation 'org.hibernate.orm:hibernate-core:6.6.5.Final'
    implementation 'com.mysql:mysql-connector-j:9.2.0'

    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'
}

tasks.build {
    dependsOn(shadowJar)
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
